/* autogenerated by Processing revision 1289 on 2023-02-14 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class puzzle extends PApplet {

int[] boxes;
int size = 200;
// int index = mouseX/size;




public void setup()
{
    /* size commented out by preprocessor */;
    boxes = new int[7];
    for(int i = 0; i < boxes.length; i++)
    {
        boxes[i] = (int) random(0,3);
        rect(i*size, boxes[i], size,size);
    }
}



public void drawBoxes()
{
    for(int i = 0; i < boxes.length; i++)
    {
        if(boxes[i] == 0)
        {
            fill(255,0,0);

        }
        else if(boxes[i] == 1)
        {
            fill(0,255,0);

        }
        else if(boxes[i] == 2)
        {
            fill(0,0,255);
        }
        rect(i*size, 0,size, size );


        

    }
}



public void nextColor(int index)
{
    boxes[index]++;
    if(boxes[index] > 3)
    {
        boxes[index] = 0;
    }
}



public void mousePressed() {
      int index = mouseX/size;

    if(index > 0)
      {
       nextColor(index-1); 
      }
    if (index < boxes.length - 1)
    {
        nextColor(index + 1);

    }


}



public void draw()
{
    background(100);
    drawBoxes();
}


  public void settings() { size(1400, 200); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "puzzle" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
